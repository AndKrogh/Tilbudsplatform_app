@page "/estimate/{projectId:int}"
@inject IEstimateInterface EstimateService
@inject IProjectInterface ProjectService

<h3>Samlede omkostninger</h3>

@if (estimate != null && project != null)
{
    <div>
        <h4>Estimate Details</h4>
        <table class="table">
            <thead>
                <tr>
                    <th>Projekt ID</th>
                    <th>Projekt Navn</th>
                    <th>Estimeret Timer</th>
                    <th>Timepris</th>
                    <th>Samlede Omkostninger</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@estimate.ProjectId</td>
                    <td>@project.Name</td>
                    <td>@estimate.EstimatedHours</td>
                    <td>@estimate.HourlyRate</td>
                    <td>@estimate.TotalCost</td>
                </tr>
            </tbody>
        </table>
    </div>
}
else if (errorMessage != null)
{
    <p style="color: red;">@errorMessage</p>
}
else
{
    <p>Loading...</p>
}

@code {
    [Parameter] public int ProjectId { get; set; }
    private Project project;
    private Estimate estimate;
    private string errorMessage;

    protected override async Task OnParametersSetAsync()
    {
        try
        {
            estimate = await EstimateService.GetByProjectIdAsync(ProjectId);
            project = await ProjectService.GetProjectByIdAsync(ProjectId);
        }
        catch (Exception ex)
        {
            errorMessage = $"Error: {ex.Message}";
            Console.WriteLine($"Error: {ex.Message}");
        }
    }
}
